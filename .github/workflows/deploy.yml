name: Build & Deploy Bodylog Frontend

on:
  push:
    branches:
      - main
    paths:
      - "lib/**"
      - "bodylog-frontend/**"
      - "Dockerfile"
      - ".github/workflows/deploy.yml"
      - ".dockerignore"
      - "nginx.conf"
      - "default.conf"
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/bodylog-frontend
  CONTAINER_NAME: bodylog-frontend
  # 메모리 제한 완화
  _JAVA_OPTIONS: "-Xmx4g"
  NODE_OPTIONS: "--max_old_space_size=4096"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract short SHA
        id: meta
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Build & Push (latest + sha)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.SHORT_SHA }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline
          build-args: |
            BUILDKIT_PROGRESS=plain

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          set -e
          if [ -z "$EC2_HOST" ]; then
            echo "EC2_HOST is missing"; exit 1
          fi
          if [ -z "$EC2_SSH_KEY_BASE64" ]; then
            echo "EC2_SSH_KEY_BASE64 is missing"; exit 1
          fi
          echo "Secrets OK"
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_SSH_KEY_BASE64: ${{ secrets.EC2_SSH_KEY_BASE64 }}

      - name: Decode SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY_BASE64 }}" | base64 -d > $GITHUB_WORKSPACE/private_key.pem
          chmod 644 $GITHUB_WORKSPACE/private_key.pem

      - name: SSH ping (debug)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key_path: ${{ github.workspace }}/private_key.pem  
          debug: true
          script_stop: true
          script: |
            echo "SSH connected"
            whoami
            uname -a
            docker --version || echo "docker not found"

      - name: Deploy container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key_path: ${{ github.workspace }}/private_key.pem   
          script_stop: true
          envs: IMAGE_NAME,CONTAINER_NAME
          script: |
            set -euo pipefail
            IMAGE="${IMAGE_NAME}:latest"
            NAME="${CONTAINER_NAME}"

            echo "[1/3] docker pull ${IMAGE}"
            docker pull "${IMAGE}" || true

            echo "[2/3] stop & remove existing container if any"
            if [ "$(docker ps -aq -f name=^/${NAME}\$)" ]; then
              docker rm -f "${NAME}" || true
            fi

            echo "[3/3] run new container"
            docker run -d \
              --name "${NAME}" \
              -p 3000:3000 \
              --restart unless-stopped \
              "${IMAGE}"

            echo "Deploy finished"
